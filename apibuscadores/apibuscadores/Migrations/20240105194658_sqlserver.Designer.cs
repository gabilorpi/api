// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apibuscadores.Context;

#nullable disable

namespace apibuscadores.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240105194658_sqlserver")]
    partial class sqlserver
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("apibuscadores.Models.Agencia", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgencia"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientesIdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NomeAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgencia");

                    b.HasIndex("ClientesIdCliente");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("apibuscadores.Models.Clientes", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("apibuscadores.Models.Contatos", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContato"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContato");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("apibuscadores.Models.Hoteis", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHotel"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecoPorNoite")
                        .HasColumnType("float");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHotel");

                    b.ToTable("Hoteis");
                });

            modelBuilder.Entity("apibuscadores.Models.Passagens", b =>
                {
                    b.Property<int>("IdPassagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPassagem"), 1L, 1);

                    b.Property<int>("IdVoo")
                        .HasColumnType("int");

                    b.HasKey("IdPassagem");

                    b.ToTable("Passagens");
                });

            modelBuilder.Entity("apibuscadores.Models.Reserva_Quarto", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"), 1L, 1);

                    b.Property<string>("DataCheckIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataCheckOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarto")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.ToTable("Reserva_Quarto");
                });

            modelBuilder.Entity("apibuscadores.Models.Voo", b =>
                {
                    b.Property<int>("IdVoo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoo"), 1L, 1);

                    b.Property<string>("DataAterrissagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataDecolagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraAterrissagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraDecolagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preco")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVoo");

                    b.ToTable("Voo");
                });

            modelBuilder.Entity("apibuscadores.Models.Agencia", b =>
                {
                    b.HasOne("apibuscadores.Models.Clientes", null)
                        .WithMany("Agencia")
                        .HasForeignKey("ClientesIdCliente");
                });

            modelBuilder.Entity("apibuscadores.Models.Clientes", b =>
                {
                    b.Navigation("Agencia");
                });
#pragma warning restore 612, 618
        }
    }
}
